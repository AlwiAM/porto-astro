---
import Analytics from '../components/Analytics.astro';

interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
}

const {
  title,
  description = "Full Stack Web Developer Portfolio",
  image = "/og-image.jpg",
  type = "website"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const ogImageURL = new URL(image, Astro.site);

// Schema.org structured data for SEO
const personSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Adam Maulana",
  jobTitle: "Full Stack Web Developer & IT Trainer",
  url: Astro.site,
  image: ogImageURL,
  sameAs: [
    "https://github.com/AlwiAM",
    "https://linkedin.com/in/adam-maulana",
  ],
  knowsAbout: [
    "Web Development",
    "JavaScript",
    "TypeScript",
    "React",
    "Node.js",
    "Astro",
    "Full Stack Development"
  ],
  description: description
};
---

<!doctype html>
<html lang="en" transition:animate="fade">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={canonicalURL} />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#3b82f6" />

    <!-- Schema.org for Google -->
    <script type="application/ld+json" set:html={JSON.stringify(personSchema)} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageURL} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImageURL} />
    <script is:inline>
      // Load theme before page renders to prevent flash
      const theme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', theme);
    </script>
    <Analytics />
    <style>
      @view-transition {
        navigation: auto;
      }
    </style>
  </head>
  <body>
    <!-- Scroll Progress Indicator -->
    <div id="scroll-progress" class="scroll-progress"></div>

    <nav class="navbar">
      <div class="container">
        <a href="/" class="logo">AM</a>

        <!-- Mobile Menu Toggle -->
        <button id="mobile-menu-toggle" class="mobile-menu-toggle" aria-label="Toggle menu">
          <span></span>
          <span></span>
          <span></span>
        </button>

        <ul class="nav-links" id="nav-links">
          <li><a href="/">Home</a></li>
          <li><a href="/#about">About</a></li>
          <li><a href="/#skills">Skills</a></li>
          <li><a href="/#projects">Projects</a></li>
          <li><a href="/#testimonials">Testimonials</a></li>
          <li><a href="/blog">Blog</a></li>
          <li><a href="/#contact">Contact</a></li>
          <li><a href="/resume.pdf" download class="btn-resume">Download CV</a></li>
          <li>
            <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
              <svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="5"></circle>
                <line x1="12" y1="1" x2="12" y2="3"></line>
                <line x1="12" y1="21" x2="12" y2="23"></line>
                <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                <line x1="1" y1="12" x2="3" y2="12"></line>
                <line x1="21" y1="12" x2="23" y2="12"></line>
                <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
              </svg>
              <svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
              </svg>
            </button>
          </li>
        </ul>
      </div>
    </nav>
    <main>
      <slot />
    </main>

    <!-- Back to Top Button -->
    <button id="back-to-top" class="back-to-top" aria-label="Back to top">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="18 15 12 9 6 15"></polyline>
      </svg>
    </button>

    <footer>
      <div class="container">
        <p>&copy; {new Date().getFullYear()} Adam Maulana. Built with Astro.</p>
      </div>
    </footer>
    <script>
      // Theme toggle functionality
      function initThemeToggle() {
        const themeToggle = document.getElementById('theme-toggle');

        if (!themeToggle) {
          console.error('Theme toggle button not found');
          return;
        }

        // Remove existing listener if any
        const newToggle = themeToggle.cloneNode(true) as HTMLElement;
        themeToggle.parentNode?.replaceChild(newToggle, themeToggle);

        newToggle.addEventListener('click', () => {
          const currentTheme = document.documentElement.getAttribute('data-theme');
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

          document.documentElement.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        });
      }

      // Mobile menu functionality
      function initMobileMenu() {
        const mobileToggle = document.getElementById('mobile-menu-toggle');
        const navLinks = document.getElementById('nav-links');

        if (!mobileToggle || !navLinks) return;

        const newToggle = mobileToggle.cloneNode(true) as HTMLElement;
        mobileToggle.parentNode?.replaceChild(newToggle, mobileToggle);

        newToggle.addEventListener('click', () => {
          newToggle.classList.toggle('active');
          navLinks.classList.toggle('active');
        });

        // Close menu when clicking on a link
        navLinks.querySelectorAll('a').forEach(link => {
          link.addEventListener('click', () => {
            newToggle.classList.remove('active');
            navLinks.classList.remove('active');
          });
        });
      }

      // Scroll progress indicator
      function updateScrollProgress() {
        const scrollProgress = document.getElementById('scroll-progress');
        if (!scrollProgress) return;

        const scrollTop = window.scrollY;
        const docHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercent = (scrollTop / docHeight) * 100;

        scrollProgress.style.width = `${scrollPercent}%`;
      }

      // Back to top button
      function initBackToTop() {
        const backToTop = document.getElementById('back-to-top');
        if (!backToTop) return;

        window.addEventListener('scroll', () => {
          if (window.scrollY > 500) {
            backToTop.classList.add('visible');
          } else {
            backToTop.classList.remove('visible');
          }
        });

        backToTop.addEventListener('click', () => {
          window.scrollTo({ top: 0, behavior: 'smooth' });
        });
      }

      // Initialize all features
      function initAll() {
        initThemeToggle();
        initMobileMenu();
        initBackToTop();
        window.addEventListener('scroll', updateScrollProgress);
        updateScrollProgress();
      }

      // Initialize on DOM ready and after view transitions
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initAll);
      } else {
        initAll();
      }

      // Re-initialize after Astro view transitions
      document.addEventListener('astro:page-load', initAll);

      // Register Service Worker for PWA
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then((registration) => {
              console.log('SW registered:', registration);
            })
            .catch((error) => {
              console.log('SW registration failed:', error);
            });
        });
      }
    </script>
  </body>
</html>

<style is:global>
  :root {
    --primary: #3b82f6;
    --primary-dark: #2563eb;
    --secondary: #8b5cf6;
    --text: #1f2937;
    --text-light: #6b7280;
    --bg: #ffffff;
    --bg-secondary: #f9fafb;
    --border: #e5e7eb;
    --shadow: rgba(0, 0, 0, 0.1);
    --transition: 0.3s ease;
  }

  [data-theme="dark"] {
    --primary: #60a5fa;
    --primary-dark: #3b82f6;
    --secondary: #a78bfa;
    --text: #f9fafb;
    --text-light: #d1d5db;
    --bg: #111827;
    --bg-secondary: #1f2937;
    --border: #374151;
    --shadow: rgba(0, 0, 0, 0.3);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    line-height: 1.6;
    color: var(--text);
    background: var(--bg);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  /* Navbar */
  .navbar {
    position: fixed;
    top: 0;
    width: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--border);
    z-index: 1000;
    padding: 1rem 0;
  }

  [data-theme="dark"] .navbar {
    background: rgba(17, 24, 39, 0.95);
  }

  .navbar .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary);
    text-decoration: none;
    transition: color var(--transition);
  }

  .logo:hover {
    color: var(--primary-dark);
  }

  .nav-links {
    display: flex;
    gap: 2rem;
    list-style: none;
  }

  .nav-links a {
    text-decoration: none;
    color: var(--text);
    font-weight: 500;
    transition: color var(--transition);
  }

  .nav-links a:hover {
    color: var(--primary);
  }

  /* Resume Download Button */
  .btn-resume {
    padding: 0.5rem 1rem !important;
    background: var(--primary) !important;
    color: white !important;
    border-radius: 6px;
    font-weight: 600 !important;
    transition: all var(--transition) !important;
  }

  .btn-resume:hover {
    background: var(--primary-dark) !important;
    transform: translateY(-2px);
  }

  /* Mobile Menu Toggle */
  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    gap: 5px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    z-index: 1001;
  }

  .mobile-menu-toggle span {
    width: 25px;
    height: 3px;
    background: var(--text);
    border-radius: 3px;
    transition: all 0.3s ease;
  }

  .mobile-menu-toggle.active span:nth-child(1) {
    transform: rotate(45deg) translate(8px, 8px);
  }

  .mobile-menu-toggle.active span:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-toggle.active span:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -7px);
  }

  /* Theme Toggle */
  .theme-toggle {
    background: transparent;
    border: 2px solid var(--border);
    border-radius: 8px;
    padding: 0.5rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition);
    color: var(--text);
  }

  .theme-toggle:hover {
    background: var(--bg-secondary);
    border-color: var(--primary);
  }

  .sun-icon {
    display: none;
  }

  .moon-icon {
    display: block;
  }

  [data-theme="dark"] .sun-icon {
    display: block;
  }

  [data-theme="dark"] .moon-icon {
    display: none;
  }

  /* Main */
  main {
    margin-top: 70px;
    min-height: calc(100vh - 140px);
  }

  /* Footer */
  footer {
    background: var(--bg-secondary);
    padding: 2rem 0;
    text-align: center;
    color: var(--text-light);
    border-top: 1px solid var(--border);
  }

  /* Typography */
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.2;
    font-weight: 700;
  }

  h1 {
    font-size: clamp(2.5rem, 5vw, 4rem);
  }

  h2 {
    font-size: clamp(2rem, 4vw, 3rem);
  }

  h3 {
    font-size: clamp(1.5rem, 3vw, 2rem);
  }

  /* Utilities */
  .btn {
    display: inline-block;
    padding: 0.75rem 2rem;
    background: var(--primary);
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 600;
    transition: all var(--transition);
    border: none;
    cursor: pointer;
  }

  .btn:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px var(--shadow);
  }

  .btn-secondary {
    background: transparent;
    color: var(--primary);
    border: 2px solid var(--primary);
  }

  .btn-secondary:hover {
    background: var(--primary);
    color: white;
  }

  /* Scroll Progress Indicator */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--primary), var(--secondary));
    z-index: 1002;
    transition: width 0.1s ease;
  }

  /* Back to Top Button */
  .back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: var(--primary);
    color: white;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px var(--shadow);
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
    transition: all 0.3s ease;
    z-index: 999;
  }

  .back-to-top.visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .back-to-top:hover {
    background: var(--primary-dark);
    transform: translateY(-5px);
    box-shadow: 0 6px 20px var(--shadow);
  }

  /* Responsive */
  @media (max-width: 968px) {
    .mobile-menu-toggle {
      display: flex;
    }

    .nav-links {
      position: fixed;
      top: 70px;
      right: -100%;
      width: 100%;
      max-width: 300px;
      height: calc(100vh - 70px);
      background: var(--bg);
      border-left: 1px solid var(--border);
      flex-direction: column;
      gap: 0;
      padding: 2rem 0;
      transition: right 0.3s ease;
      box-shadow: -4px 0 12px var(--shadow);
    }

    .nav-links.active {
      right: 0;
    }

    .nav-links li {
      width: 100%;
    }

    .nav-links a,
    .nav-links button {
      display: block;
      width: 100%;
      text-align: left;
      padding: 1rem 2rem;
      border-bottom: 1px solid var(--border);
    }

    .btn-resume {
      margin: 1rem 2rem !important;
      width: calc(100% - 4rem) !important;
      text-align: center !important;
      display: block !important;
    }

    .theme-toggle {
      margin: 0 2rem;
      width: calc(100% - 4rem);
      justify-content: center;
    }

    .back-to-top {
      bottom: 6rem;
      right: 1rem;
      width: 45px;
      height: 45px;
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }
  }
</style>
